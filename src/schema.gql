# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BulkImportResult {
  created: Int!
  errors: [String!]!
  failed: Int!
  merged: Int!
}

input BulkLeadRowInput {
  age: Float
  approachAt: DateTime
  clientQa: [ClientQaInput!]
  clientTypes: String
  companyName: String
  designation: String
  email: String
  firstName: String
  gender: String
  investmentRange: String
  lastName: String
  leadSource: String!
  location: String
  name: String
  phone: String!
  product: String
  profession: String
  referralCode: String
  remark: String
  sipAmount: Float
}

input ClientQaInput {
  answer: String!
  question: String!
}

input ClientQaItemInput {
  answer: String!
  question: String!
}

enum ClientStage {
  ACCOUNT_OPENED
  CLIENT_INTERESTED
  FIRST_TALK_DONE
  FOLLOWING_UP
  HIBERNATED
  NOT_INTERESTED_DORMANT
  NO_RESPONSE_DORMANT
  RISKY_CLIENT_DORMANT
}

input CreateIpkLeaddInput {
  age: Float
  approachAt: DateTime
  clientQa: [ClientQaInput!]
  clientTypes: String
  companyName: String
  designation: String
  email: String
  firstName: String
  gender: String
  investmentRange: String
  lastName: String
  leadSource: String!
  location: String
  name: String
  phone: String!
  product: String
  profession: String
  referralCode: String
  remark: String
  sipAmount: Float
}

input CreateUserInput {
  archived: Boolean! = false
  email: String!
  gender: Gender
  name: String!
  password: String!
  phone: String
  role: UserRoles!
  status: Status! = ACTIVE
}

type CreateUserPayload {
  message: String
  success: Boolean!
  user: UserEntity
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Gender {
  FEMALE
  MALE
  OTHER
}

type IpkLeaddEntity {
  age: Int
  approachAt: DateTime!
  archived: Boolean!
  assignedRM: String
  assignedRmId: ID
  bioText: String
  clientQa: [String!]
  clientStage: ClientStage
  clientTypes: String
  companyName: String
  createdAt: DateTime!
  designation: String
  email: String
  events: [LeadEventEntity]
  firstName: String
  firstSeenAt: DateTime
  gender: String
  id: ID!
  investmentRange: String
  lastName: String
  lastSeenAt: DateTime
  leadCode: String
  leadSource: String!
  location: String
  name: String
  phone: String!
  phoneNormalized: String
  phones: [LeadPhoneEntity]
  product: String
  profession: String
  reenterCount: Int
  referralCode: String
  remark: String
  sipAmount: Int
  status: LeadStatus!
  updatedAt: DateTime!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type LeadEventEntity {
  authorId: ID
  id: ID!
  leadId: ID!
  meta: JSON
  next: JSON
  occurredAt: DateTime!
  prev: JSON
  tags: [String!]!
  text: String
  type: LeadEventType!
}

enum LeadEventType {
  ASSIGNMENT
  BIO_UPDATED
  HISTORY_SNAPSHOT
  INTERACTION
  NOTE
  PHONE_ADDED
  PHONE_MARKED_PRIMARY
  PHONE_REMOVED
  REMARK_UPDATED
  REVISIT
  STATUS_CHANGE
}

input LeadInteractionInput {
  leadId: ID!
  tags: [String!]! = []
  text: String!
}

input LeadListArgs {
  archived: Boolean
  dormantDays: Int
  dormantOnly: Boolean
  page: Int = 1
  pageSize: Int = 10
  search: String
  status: LeadStatus
}

input LeadNoteInput {
  leadId: ID!
  tags: [String!]! = []
  text: String!
}

type LeadPage {
  items: [IpkLeaddEntity!]!
  page: Int!
  pageSize: Int!
  total: Int!
}

type LeadPhoneEntity {
  createdAt: DateTime!
  id: ID!
  isPrimary: Boolean!
  isWhatsapp: Boolean!
  label: PhoneLabel!
  leadId: ID!
  normalized: String!
  number: String!
  updatedAt: DateTime!
  verifiedAt: DateTime
}

input LeadPhoneInput {
  isPrimary: Boolean! = false
  isWhatsapp: Boolean! = false
  label: PhoneLabel! = MOBILE
  number: String!
}

enum LeadStatus {
  ASSIGNED
  CLOSED
  ON_HOLD
  OPEN
  PENDING
}

type Mutation {
  addLeadInteraction(input: LeadInteractionInput!): LeadEventEntity!
  addLeadNote(input: LeadNoteInput!): LeadEventEntity!
  addLeadPhone(input: LeadPhoneInput!, leadId: ID!): [LeadPhoneEntity!]!
  assignLead(id: ID!): IpkLeaddEntity!
  assignLeads(ids: [ID!]!): [IpkLeaddEntity!]!
  createIpkLeadd(input: CreateIpkLeaddInput!): IpkLeaddEntity!
  createLeadsBulk(rows: [BulkLeadRowInput!]!): BulkImportResult!
  createUser(input: CreateUserInput!): CreateUserPayload!
  generatePasswordResetLink(email: String!): String!
  markPrimaryLeadPhone(phoneId: ID!): [LeadPhoneEntity!]!
  reassignLead(input: ReassignLeadInput!): IpkLeaddEntity!
  removeLeadPhone(phoneId: ID!): [LeadPhoneEntity!]!
  removeUser(id: ID!): UserEntity!
  setLeadPhoneWhatsapp(isWhatsapp: Boolean!, phoneId: ID!): LeadPhoneEntity!
  updateLeadBio(input: UpdateLeadBioInput!): IpkLeaddEntity!
  updateLeadClientQa(input: UpdateLeadClientQaInput!): IpkLeaddEntity!
  updateLeadRemark(input: UpdateLeadRemarkInput!): IpkLeaddEntity!
  updateLeadStatus(leadId: ID!, status: LeadStatus!): IpkLeaddEntity!
  updateUser(id: ID!, input: UpdateUserDto!): UserEntity!
}

enum PhoneLabel {
  HOME
  MOBILE
  OTHER
  PRIMARY
  WHATSAPP
  WORK
}

type Query {
  getActiveUsers: [UserEntity!]!
  getUser(id: ID!, withLeads: Boolean! = false): UserEntity
  getUsers(withLeads: Boolean! = false): [UserEntity!]!
  ipkLeadds: [IpkLeaddEntity!]!
  leads(args: LeadListArgs!): LeadPage!
  leadsOpen: [IpkLeaddEntity!]!
  me: UserEntity!
}

input ReassignLeadInput {
  leadId: ID!
  newRmId: ID!
}

enum Status {
  ACTIVE
  INACTIVE
}

input UpdateLeadBioInput {
  bioText: String!
  leadId: ID!
}

input UpdateLeadClientQaInput {
  items: [ClientQaItemInput!]!
  leadId: ID!
}

input UpdateLeadRemarkInput {
  leadId: ID!
  remark: String!
}

input UpdateUserDto {
  active: Boolean
  archived: Boolean
  email: String
  firebaseUid: String
  gender: Gender
  name: String
  password: String
  phone: String
  role: UserRoles
  status: Status
}

type UserEntity {
  archived: Boolean!
  assignedLeads: [IpkLeaddEntity]
  createdAt: DateTime!
  email: String!
  firebaseUid: String!
  gender: Gender
  id: ID!
  lastAssignedAt: DateTime
  name: String!
  phone: String
  role: UserRoles!
  status: Status!
  updatedAt: DateTime!
}

enum UserRoles {
  ADMIN
  MARKETING
  RM
  STAFF
}